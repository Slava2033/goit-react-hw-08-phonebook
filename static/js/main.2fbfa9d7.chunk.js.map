{"version":3,"sources":["components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","components/HeaderMUI/NavigationMUI.js","components/HeaderMUI/AuthNavMUI.js","components/HeaderMUI/UserMenuMUI.js","components/HeaderMUI/HeaderMUI.js","App.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/auth/auth-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/contacts/contacts-selectors.js","components/Container/container.module.css"],"names":["Container","children","className","styles","container","CssBaseline","PrivateRoute","redirectTo","routeProps","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","PublicRoute","restricted","shouldRedirect","link","display","textDecoration","padding","fontWeight","fontSize","color","NavigationMUI","exact","style","activeStyle","activeLink","AuthNavMUI","alignItems","name","marginRight","button","textTransform","UserMenuMUI","dispatch","useDispatch","getUsername","Button","type","endIcon","onClick","authOperations","logOut","HeaderMUI","AppBar","position","Toolbar","Grid","justify","item","HomeView","lazy","RegisterView","LoginView","ContactsView","theme","createMuiTheme","palette","primary","main","secondary","REACT_APP_BASE_URL_PROD","process","App","isFetchingCurrentUser","getIsFetchingCurrent","console","log","useEffect","fetchCurrentUser","ThemeProvider","fallback","path","component","axios","defaults","baseURL","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","message","logIn","_","thunkAPI","state","getState","persistedToken","get","authSlice","createSlice","initialState","user","email","extraReducers","fulfilled","action","payload","pending","rejected","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsOperations","fetchContacts","addContact","number","contact","deleteContact","id","delete","items","createReducer","filter","combineReducers","getContacts","getFilter","contactsSelectors","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","module","exports"],"mappings":"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","file":"static/js/main.2fbfa9d7.chunk.js","sourcesContent":["import { CssBaseline } from '@material-ui/core';\nimport styles from './container.module.css';\n\nexport default function Container({ children }) {\n  return (\n    <div className={styles.container}>\n      {children}\n      <CssBaseline />\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n\n/**\n * 1. Он должен повторять API Route\n *  2. Он должен рендерить Route\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo\n */\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 900,\n    fontSize: 18,\n    color: '#faa346',\n  },\n  // activeLink: {\n  //   color: '#732e4d',\n  // },\n};\n\nexport default function NavigationMUI() {\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Главная\n      </NavLink>\n\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Контакты\n      </NavLink>\n    </nav>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import { Grid } from '@material-ui/core';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 900,\n    fontSize: 18,\n    color: '#faa346',\n  },\n  // activeLink: {\n  //   color: '#732e4d',\n  // },\n};\n\nexport default function AuthNavMUI() {\n  return (\n    <>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Регистрация\n      </NavLink>\n  \n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Логин\n      </NavLink>\n     \n    </>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from 'redux/auth';\nimport Button from '@material-ui/core/Button';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'baseline',\n    color: '#faa346',\n  },\n  name: {\n    fontWeight: 700,\n    fontSize: 18,\n    marginRight: 12,\n  },\n  button: {\n    color: '#faa346',\n    fontWeight: 700,\n    fontSize: 18,\n    textTransform: 'capitalize',\n  },\n};\n\nexport default function UserMenuMUI() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.name}>Добро пожаловать, {name}</span>\n\n      <Button\n        type=\"button\"\n        style={styles.button}\n        endIcon={<PowerSettingsNewIcon fontSize=\"medium\" />}\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        <span>Выйти</span>\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppBar, Toolbar, Grid } from '@material-ui/core';\nimport Navigation from './NavigationMUI';\nimport AuthNav from './AuthNavMUI';\nimport UserMenu from './UserMenuMUI';\nimport { authSelectors } from 'redux/auth';\n\nexport default function HeaderMUI() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Grid container justify=\"space-around\" alignItems=\"center\">\n          <Grid item>\n            <Navigation />\n          </Grid>\n\n          {isLoggedIn ? (\n            <Grid item>\n              <UserMenu />\n            </Grid>\n          ) : (\n            <Grid item>\n              <AuthNav />\n            </Grid>\n          )}\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Suspense, lazy } from 'react';\nimport axios from 'axios';\nimport Container from './components/Container';\n// import HomeView from './views/HomeView';\n// import RegisterView from './views/RegisterView';\n// import LoginView from './views/LoginView';\n// import ContactsView from './views/ContactsView';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { authOperations, authSelectors } from './redux/auth';\nimport HeaderMUI from './components/HeaderMUI/HeaderMUI';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#011211',\n    },\n    secondary: {\n      main: '#faa346',\n    },\n  },\n});\nconst { REACT_APP_BASE_URL_PROD } = process.env.REACT_APP_BASE_URL_PROD;\nif (process.env.NODE_ENV === 'production') {\n  axios.defaults.baseURL = REACT_APP_BASE_URL_PROD;\n}\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n  console.log(isFetchingCurrentUser);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <h1>Показываем React Skeleton</h1>\n      ) : (\n        <ThemeProvider theme={theme}>\n          <HeaderMUI />\n          <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n              <PublicRoute exact path=\"/\" component={HomeView} />\n              <PublicRoute\n                path=\"/register\"\n                component={RegisterView}\n                restricted\n              />\n              <PublicRoute\n                path=\"/login\"\n                component={LoginView}\n                redirectTo=\"/contacts\"\n                restricted\n              />\n              <PrivateRoute\n                path=\"/contacts\"\n                component={ContactsView}\n                redirectTo=\"/login\"\n              />\n            </Suspense>\n          </Switch>\n        </ThemeProvider>\n      )}\n    </Container>\n  );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue('need to log in');\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nconst authOperations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default authOperations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n// import { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\n// const fetchContacts = createAsyncThunk('contacts/fetchContacts', async () => {\n//   const { data } = await axios.get('/contacts');\n//   return data;\n// });\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\n// const addContact = createAsyncThunk(\n//   ‘contacts/addContact’,\n//   async (name, number) => {\n//     const contact = {\n//       name,\n//       number,\n//     };\n//     const { data } = await axios.post(‘/contacts’, contact);\n//     return data;\n//   },\n// );\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\n// const deleteContact = createAsyncThunk(‘contacts/deleteContact’, async id => {\n//   await axios.delete(`/contacts/${id}`);\n// });\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default contactsOperations;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const getFiteredContacts = contacts => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(text =>\n        text.name.toLowerCase().includes(normalizedFilter),\n      );\n    };\n\n    return getFiteredContacts(contacts);\n  },\n);\n\nconst contactsSelectors = {\n  getContacts,\n  getFilter,\n  getVisibleContacts,\n};\n\nexport default contactsSelectors;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};"],"sourceRoot":""}