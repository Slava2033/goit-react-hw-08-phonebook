{"version":3,"sources":["../node_modules/shortid/lib/alphabet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/ContactForm/contactForm.module.css","components/ContactList/contactList.module.css","components/Filter/filter.module.css","app.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","_slicedToArray","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","unsupportedIterableToArray","TypeError","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","id","RegExp","replace","test","ContactForm","useState","name","setName","setNumber","contactNameId","shortid","contactNumberId","dispatch","useDispatch","contacts","useSelector","contactsSelectors","getContacts","useForm","register","handleSubmit","handleChange","e","currentTarget","className","s","form","onSubmit","data","console","find","contact","alert","contactsOperations","addContact","label","htmlFor","input","type","onChange","ref","button","ContactList","useEffect","fetchContacts","getVisibleContacts","list","map","listItem","listItemText","onClick","deleteContact","onDeleteContact","axios","defaults","baseURL","Filter","getFilter","filterLabel","filterInput","contactsActions","target","ContactsView","container","main_header","contacts_header"],"mappings":"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","file":"static/js/5.d7c8e618.chunk.js","sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__D142y\",\"label\":\"contactForm_label__2foz_\",\"input\":\"contactForm_input__21S1_\",\"button\":\"contactForm_button__B04hb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__30VP1\",\"listItem\":\"contactList_listItem__3TdBf\",\"listItemText\":\"contactList_listItemText__3wcxP\",\"button\":\"contactList_button__18MOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__1hYoT\",\"filterInput\":\"filter_filterInput__KcP-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\",\"main_header\":\"app_main_header__rKCLj\",\"contacts_header\":\"app_contacts_header__1KNLm\"};","import { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './contactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { contactsSelectors } from 'redux/contacts';\nimport { useForm } from 'react-hook-form';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactNameId = shortid.generate();\n  const contactNumberId = shortid.generate();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const { register, handleSubmit } = useForm();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = data => {\n    // e.preventDefault();\n    console.log(data.name);\n    if (data.name === '') {\n      alert(`Введите, пожалуйста, имя контакта.`);\n      return;\n    }\n\n    if (data.number === '') {\n      alert(`Введите, пожалуйста, номер телефона контакта.`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.name === data.name)) {\n      alert(`${data.name} is already in contacts.`);\n      reset();\n      return;\n    }\n    dispatch(contactsOperations.addContact(data.name, data.number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit(handleFormSubmit)}>\n      <label className={s.label} htmlFor={contactNameId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={contactNameId}\n          ref={register}\n        />\n      </label>\n      <label className={s.label} htmlFor={contactNumberId}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={contactNumberId}\n          ref={register}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport s from './contactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { contactsSelectors } from 'redux/contacts';\nimport { useEffect } from 'react';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.listItem} key={id}>\n          <span className={s.listItemText}>{name}:</span>\n          <span className={s.listItemText}>{number}</span>\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport * as contactsActions from 'redux/contacts';\n\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterLabel}>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport s from 'app.module.css';\n\nexport default function ContactsView() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.main_header}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.contacts_header}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}